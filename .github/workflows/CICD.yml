# -----------------------
#Github Action 
#
#Oleksandr Yurik
#------------------------
name: CICD-Action
env:
  BUCKET_NAME : "test-alpacked-sashay"
  AWS_REGION  : "us-east-1"
  DEPLOY_DIR_NAME : "public"
  POLICY_FILE_NAME : "s3pollicy.json"
on:
  push:
    branches: 
      - main

jobs:
  static-website-generation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2


      - name: Checking list of files
        run: ls -alF

      - name: Installing and configuring npm
        run: |
            npm install
            npm config delete prefix 
            npm config set prefix /usr/local
            npm install -g gatsby-cli

      - name: Checking list of files
        run: ls -alF

      - name: Setuping CONTENTFUL
        run: npm run setup -- --spaceId=${{secrets.CONTENTFUL_SPACE_ID}} --managementToken=${{secrets.CONTENTFUL_PERSONAL_AT}} --accessToken=${{secrets.CONTENT_DELIVERY_API_AT}}
            
      - name: Building
        run: gatsby build
            
      - name: Checking list of files
        run: ls public


        
      - name: Configure AWS Creds 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id : ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}
          
      - name: Check bucket for existing
        run: |
          if [ `aws s3 ls | grep ${{env.BUCKET_NAME}} | wc -l` -ne 0 ] 
          then 
          aws s3 mb s3://${{env.BUCKET_NAME}}
          aws s3api put-public-access-block \
          --bucket ${{env.BUCKET_NAME}} \
          --public-access-block-configuration "BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false"
          aws s3api put-bucket-policy  --bucket test-alpacked-sashay --policy file://${{env.POLICY_FILE_NAME}}
          else
          aws s3 rm s3://${{env.BUCKET_NAME}} --recursive
          fi
      - name: Copy deploy packeg to S3 bucket
        run: aws s3 cp ${{env.DEPLOY_DIR_NAME}}/ s3://${{env.BUCKET_NAME}}/ --recursive

      - name: Checking CloudFront for existing
        run: |
          if [ `aws cloudfront list-distributions | wc -l` -eq 0 ] 
          then
          aws cloudfront delete-distribution \
          --distribution-id=`aws cloudfront list-distributions | grep \"Id\": | head -n 1 | grep -o -E "[A-Z0-9]{14}"` \
          fi
          aws cloudfront create-distribution \
          --origin-domain-name ${{env.BUCKET_NAME}}.s3.us-east-1.amazonaws.com \
          --default-root-object index.html
